name: Release Core Package

on:
  push:
    branches:
      - release

jobs:
  build-and-release:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Get Version
        run: |
          cd core
          echo "PACKAGE_VERSION=$(cargo metadata --format-version 1 | jq -r '.packages[0].version')" >> $GITHUB_ENV

      - name: Build Core Package
        run: |
          cd core
          cargo build --release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          release_name: Release v${{ env.PACKAGE_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./core/target/release/librusty_hangul.dylib
          asset_name: librusty_hangul-v${{ env.PACKAGE_VERSION }}.dylib
          asset_content_type: application/octet-stream
